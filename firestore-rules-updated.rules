rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function signedIn() { return request.auth != null; }
    
    function memberOfConversation(conversationData) {
      return signedIn() && (
        // Check members object (more reliable than array-contains)
        (conversationData.members[request.auth.uid] == true) ||
        // Fallback to memberIds array if members object doesn't exist
        (request.auth.uid in conversationData.memberIds)
      );
    }

    match /users/{uid} {
      allow read: if signedIn();
      allow write: if signedIn() && request.auth.uid == uid;
    }

    match /conversations/{cid} {
      // Allow reading if user is a member, OR if the document doesn't exist (for checking before creation)
      allow read: if resource == null || memberOfConversation(resource.data);
      allow create: if signedIn() && (
        // Check members object first (more reliable)
        (request.resource.data.members[request.auth.uid] == true) ||
        // Fallback to memberIds array
        (request.auth.uid in request.resource.data.memberIds)
      );
      allow update: if memberOfConversation(resource.data);
      allow delete: if signedIn() && resource.data.ownerId == request.auth.uid;

      match /messages/{mid} {
        allow read, create: if memberOfConversation(
          get(/databases/$(database)/documents/conversations/$(cid)).data
        );
        allow update, delete: if memberOfConversation(
          get(/databases/$(database)/documents/conversations/$(cid)).data
        ) && request.auth.uid == resource.data.senderId;
      }
    }

    // Public match chat (demo) - each match has a messages subcollection
    match /matches/{matchId} {
      allow read: if signedIn();
      // Prevent arbitrary match document creation via client for demo (adjust as needed)
      allow create: if false; 
      allow update, delete: if false;

      match /messages/{mid} {
        // Any signed in user can read & send messages to match chat demo
        allow read, create: if signedIn();
        // Allow sender to edit/delete their own message (optional)
        allow update, delete: if signedIn() && request.auth.uid == resource.data.senderId;
      }
    }
  }
}
